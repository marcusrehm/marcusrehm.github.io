<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Database | Marcus Rehm]]></title>
  <link href="http://marcusrehm.github.io/blog/categories/database/atom.xml" rel="self"/>
  <link href="http://marcusrehm.github.io/"/>
  <updated>2015-02-28T23:33:23-03:00</updated>
  <id>http://marcusrehm.github.io/</id>
  <author>
    <name><![CDATA[Marcus Rehm]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Restoring SQL Server Databases From Pending State]]></title>
    <link href="http://marcusrehm.github.io/blog/2014/02/25/restoring-sql-server-databases-from-pending-state/"/>
    <updated>2014-02-25T22:12:58-03:00</updated>
    <id>http://marcusrehm.github.io/blog/2014/02/25/restoring-sql-server-databases-from-pending-state</id>
    <content type="html"><![CDATA[<p>Today, after migrate a SQL Server 2012 server we faced a situation where all databases were in <code>Pending State</code>.</p>

<p>Browsing the web we found the commands needed to put databases back to online state again<!-- more -->, the only issue was that this server has about sixteen databases and execute the script sixteen times, changing variables would be time consuming and we could type something wrong. So I wrote this very simple script that iterates over a cursor returning  databases name which is in <code>Pending State</code>, <code>Suspect</code> and <code>Single User</code> mode.</p>

<p>Hope that it saves you some work hours as it saved me. :)</p>

<p><div><script src='https://gist.github.com/9144921.js'></script>
<noscript><pre><code>declare @dbname varchar(255);
DECLARE dbname_cursor CURSOR FOR 
	SELECT name--, database_id, create_date, STATE_DESC
	FROM sys.databases
	WHERE STATE_DESC in ('SINGLE_USER', 'SUSPECT', 'RECOVERY_PENDING');

OPEN dbname_cursor
FETCH NEXT FROM dbname_cursor
INTO @dbname

WHILE @@FETCH_STATUS = 0
BEGIN
    PRINT 'Recovering &quot;' + @dbname + '&quot;...'
    
	exec sp_resetstatus @dbname;
	exec('alter database [' + @dbname + '] set emergency');
	dbcc checkdb(@dbname)
	dbcc checkdb(@dbname)
	exec('alter database [' + @dbname + '] set single_user with rollback immediate');
	dbcc checkdb (@dbname, repair_allow_data_loss)
	exec('alter database [' + @dbname + '] set multi_user');
	dbcc checkdb (@dbname)

    FETCH NEXT FROM dbname_cursor 
    INTO @dbname
END 
CLOSE dbname_cursor;
DEALLOCATE dbname_cursor;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
